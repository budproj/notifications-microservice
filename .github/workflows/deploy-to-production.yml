name: deployToProduction


on:
  push:
    branches:
      - main

jobs:
  DeployToProduction:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Building image..."
          docker build --build-arg GITHUB_TOKEN -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA


      - name: Setup git ssh key
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Setup git as a Github Actions user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: push to our repos
        run: |
          git tag stable -f && git push origin stable -f
          bash <(curl -s https://raw.githubusercontent.com/budproj/gist/main/gitops/deploy.sh) -t $GITHUB_SHA -s stable

# TODO: generate an ARGOCD_TOKEN
      # - name: Sync ArgoCD Application
      #   uses: omegion/argocd-app-actions@master
      #   with:
      #     address: ${{ secrets.ARGOCD_ADDRESS }}
      #     token: ${{ secrets.ARGOCD_TOKEN }}
      #     appName: ${{ secrets.REPO_NAME }}
